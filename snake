#!/bin/python3

from argparse import ArgumentParser
import csv
import time
import numpy as np
from engine.direction import Direction
from engine.game import Game
from ai.utils import action

EXPLO = 0.0001
Q = {}

def load_Q():
    with open(args.load, "r") as file:
        data = csv.DictReader(file)

        for row in data:
            state = eval(row['State'])
            a = Direction[row['Action']].index

            Q[(state, a)] = float(row['Q_Value'])

if __name__ == "__main__":
    parser = ArgumentParser("snake")

    parser.add_argument("-l", "--load")
    parser.add_argument("-n", "--number", type=int)
    parser.add_argument("--visual", action='store_true')

    args = parser.parse_args()

    n = 1

    if args.number:
        n = int(args.number)

    if args.load is not None:
        load_Q()

        sizes = []

        for i in range(n):
            isLast = False
            game = Game()

            game.start()

            snake = game.get_snake()

            while not isLast:
                s = snake.get_state()
                a = action(Q, s, EXPLO)

                try:
                    r = snake.move(list(Direction)[a])
                except:
                    isLast = True

                if args.visual:
                    game.get_world().render()
                    time.sleep(0.3)

            sizes.append(snake.get_size())
            print(f"[{i + 1}] size : {snake.get_size()}")

        print(f"Size Avarage {np.average(sizes)}")